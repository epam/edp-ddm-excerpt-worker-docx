global:
  kafkaOperator:
    replicationFactor: 3
  container:
    requestsLimitsEnabled: true
  istio:
    sidecar:
      requestsLimitsEnabled: true
      resources:
        requests: {}
        limits: {}
  registry:
    excerptWorkerDocx:
      container:
        envVars: {}
        resources:
          requests: {}
          limits: {}
      hpa:
        enabled: false
        minReplicas: 1
        maxReplicas: 3
      istio:
        sidecar:
          enabled: true
          resources:
            requests: {}
            limits: {}
      replicas: 1

name: excerpt-worker-docx

version: 1.1.0

deployProfile: prod

port: 8080

image:
  name: excerpt-worker-docx
  version: latest

service:
  port: 8080

kafka:
  url: kafka-cluster-kafka-bootstrap
  port: 9093
  user: excerpt-worker-docx-user
  clusterName: kafka-cluster
  sslEnabled: true
  sslCertType: PEM
  sslUserKey: ${KAFKA_USER_KEYSTORE_KEY}
  sslUserCertificate: ${KAFKA_USER_KEYSTORE_CERTIFICATE}
  sslClusterCertificate: ${KAFKA_CLUSTER_TRUSTSTORE}
  numPartitions: 15

db:
  url: citus-master
  secret: citus-roles-secrets
  name: excerpt
  port: 5432
  connectionTimeout: 4000

fileExcerptCeph:
  httpEndpoint: ${FILE_EXCERPT_CEPH_BUCKET_HOST}
  bucketName: file-excerpt-bucket
  
excerptTemplatesCeph:
  httpEndpoint: ${EXCERPT_TEMPLATES_CEPH_BUCKET_HOST}
  bucketName: excerpt-templates

s3:
  config:
    client:
      protocol: http
    options:
      pathStyleAccess: true

monitoring:
  namespace: openshift-monitoring
  prometheusScrapePath: /actuator/prometheus
  jobLabel: app

probes:
  liveness:
    path: /actuator/health/liveness
  readiness:
    path: /actuator/health/readiness

audit:
  kafka:
    topic: audit-events
    schemaRegistryUrl: http://kafka-schema-registry:8081
